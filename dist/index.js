"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs-extra");
const child_process_1 = require("child_process");
const typedoc_md_1 = require("./typedoc-md");
const path = require("path");
function genDocs(cwd, urlBase, outDir) {
    const tdmd = new typedoc_md_1.DocGenerator({
        cwd,
        urlBase: urlBase
    });
    const cmd = `cd ${cwd} && node ${path.join(__dirname, './run-td')} --json ${path.join(outDir, '/docs.json')}`;
    child_process_1.exec(cmd, function (error, stdout, stderr) {
        if (stderr) {
            throw new Error(stderr);
        }
        const meta = JSON.parse(fs.readFileSync(`${outDir}/docs.json`).toString());
        const docsArr = tdmd.genDocs(meta);
        docsArr.forEach(doc => {
            const filePath = path.join(outDir, doc.path);
            fs.ensureFileSync(filePath);
            fs.writeFileSync(filePath, doc.content);
        });
    });
}
exports.genDocs = genDocs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0I7QUFDL0IsaURBQW1DO0FBQ25DLDZDQUEwQztBQUMxQyw2QkFBNkI7QUFFN0IsaUJBQXdCLEdBQUcsRUFBRSxPQUFPLEVBQUUsTUFBTTtJQUN4QyxNQUFNLElBQUksR0FBRyxJQUFJLHlCQUFZLENBQUM7UUFDMUIsR0FBRztRQUNILE9BQU8sRUFBRSxPQUFPO0tBQ25CLENBQUMsQ0FBQztJQUNILE1BQU0sR0FBRyxHQUFHLE1BQU0sR0FBRyxZQUFZLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFlBQVksQ0FBQyxFQUFFLENBQUM7SUFDOUcsb0JBQUksQ0FBQyxHQUFHLEVBQUUsVUFBUyxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU07UUFDcEMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNULE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUIsQ0FBQztRQUNELE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxHQUFHLE1BQU0sWUFBWSxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztRQUMzRSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRztZQUNmLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3QyxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzVCLEVBQUUsQ0FBQyxhQUFhLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQztBQW5CRCwwQkFtQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBmcyBmcm9tICdmcy1leHRyYSc7XHJcbmltcG9ydCB7ZXhlY30gZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XHJcbmltcG9ydCB7RG9jR2VuZXJhdG9yfSBmcm9tICcuL3R5cGVkb2MtbWQnO1xyXG5pbXBvcnQgKiBhcyBwYXRoIGZyb20gJ3BhdGgnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdlbkRvY3MoY3dkLCB1cmxCYXNlLCBvdXREaXIpe1xyXG4gICAgY29uc3QgdGRtZCA9IG5ldyBEb2NHZW5lcmF0b3Ioe1xyXG4gICAgICAgIGN3ZCxcclxuICAgICAgICB1cmxCYXNlOiB1cmxCYXNlXHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGNtZCA9IGBjZCAke2N3ZH0gJiYgbm9kZSAke3BhdGguam9pbihfX2Rpcm5hbWUsICcuL3J1bi10ZCcpfSAtLWpzb24gJHtwYXRoLmpvaW4ob3V0RGlyLCAnL2RvY3MuanNvbicpfWA7XHJcbiAgICBleGVjKGNtZCwgZnVuY3Rpb24oZXJyb3IsIHN0ZG91dCwgc3RkZXJyKSB7XHJcbiAgICAgICAgaWYgKHN0ZGVycikge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3Ioc3RkZXJyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgbWV0YSA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGAke291dERpcn0vZG9jcy5qc29uYCkudG9TdHJpbmcoKSk7XHJcbiAgICAgICAgY29uc3QgZG9jc0FyciA9IHRkbWQuZ2VuRG9jcyhtZXRhKTtcclxuICAgICAgICBkb2NzQXJyLmZvckVhY2goZG9jID0+IHtcclxuICAgICAgICAgICAgY29uc3QgZmlsZVBhdGggPSBwYXRoLmpvaW4ob3V0RGlyLCBkb2MucGF0aCk7XHJcbiAgICAgICAgICAgIGZzLmVuc3VyZUZpbGVTeW5jKGZpbGVQYXRoKTtcclxuICAgICAgICAgICAgZnMud3JpdGVGaWxlU3luYyhmaWxlUGF0aCwgZG9jLmNvbnRlbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7IFxyXG4gICAgXHJcbn1cclxuIl19